/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.nhom4.ui;

import com.nhom4.dao.KhuyenMaiDAO;
import com.nhom4.entity.KhuyenMai;
import com.nhom4.utils.Auth;
import com.nhom4.utils.MsgBox;
import com.nhom4.utils.XDate;
import java.awt.Color;
import java.awt.Font;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.JButton;

/**
 *
 * @author Hai
 */
public class KhuyenMai1 extends javax.swing.JPanel {

    Date now = new Date();
    SimpleDateFormat formats = new SimpleDateFormat("dd-MM-yyyy");
    ArrayList<KhuyenMai> listKM = new ArrayList<>();

    public KhuyenMai1() {
        initComponents();
        init();
    }

    KhuyenMaiDAO dao = new KhuyenMaiDAO();
    int row = 0;
    int them = 0;
    int checklap = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblGhiChu = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblTimKiem = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        pnlSearch = new javax.swing.JPanel();
        txtMaKM = new javax.swing.JTextField();
        lblTenKM = new javax.swing.JLabel();
        txtTenKM = new javax.swing.JTextField();
        lblNgayBD = new javax.swing.JLabel();
        lblNgayKT = new javax.swing.JLabel();
        txtGiamGia = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPre = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGhiChu = new javax.swing.JTextArea();
        lblMaKM = new javax.swing.JLabel();
        lblGiamGia = new javax.swing.JLabel();
        txtNgayKT = new com.toedter.calendar.JDateChooser();
        txtNgayBD = new com.toedter.calendar.JDateChooser();
        pnlMaKM = new javax.swing.JPanel();
        pnlTenKM = new javax.swing.JPanel();
        pnlGiamGia = new javax.swing.JPanel();
        pnlGhiChu = new javax.swing.JPanel();
        btnThem = new com.nhom4.ui.ButtonCustom();
        btnSua = new com.nhom4.ui.ButtonCustom();
        btnXoa = new com.nhom4.ui.ButtonCustom();
        btnLuu = new com.nhom4.ui.ButtonCustom();
        btnHuy = new com.nhom4.ui.ButtonCustom();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblKhuyenMai = new com.nhom4.ui.Table();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblGhiChu.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblGhiChu.setForeground(new java.awt.Color(14, 65, 91));
        lblGhiChu.setText("Ghi chú:");
        add(lblGhiChu, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 170, 170, 32));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setFocusCycleRoot(true);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTimKiem.setForeground(new java.awt.Color(102, 102, 102));
        lblTimKiem.setText("Tìm kiếm theo tên");
        jPanel1.add(lblTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 150, 30));

        txtTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtTimKiem.setBorder(null);
        txtTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTimKiemFocusLost(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyTyped(evt);
            }
        });
        jPanel1.add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 10, 775, 42));

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/search (4).png"))); // NOI18N
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });
        jPanel1.add(btnTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, 60, 40));

        pnlSearch.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(pnlSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 800, 3));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 1030, 76));

        txtMaKM.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtMaKM.setBorder(null);
        txtMaKM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaKMFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaKMFocusLost(evt);
            }
        });
        add(txtMaKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 320, 40));

        lblTenKM.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblTenKM.setForeground(new java.awt.Color(14, 65, 91));
        lblTenKM.setText("Tên khuyến mãi:");
        add(lblTenKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 170, 32));

        txtTenKM.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtTenKM.setBorder(null);
        txtTenKM.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenKMFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenKMFocusLost(evt);
            }
        });
        add(txtTenKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 170, 320, 40));

        lblNgayBD.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblNgayBD.setForeground(new java.awt.Color(14, 65, 91));
        lblNgayBD.setText("Ngày bắt đầu:");
        add(lblNgayBD, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 240, 170, 32));

        lblNgayKT.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblNgayKT.setForeground(new java.awt.Color(14, 65, 91));
        lblNgayKT.setText("Ngày kết thúc:");
        add(lblNgayKT, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 170, 32));

        txtGiamGia.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtGiamGia.setBorder(null);
        txtGiamGia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGiamGiaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGiamGiaFocusLost(evt);
            }
        });
        add(txtGiamGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 100, 320, 40));

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/left-arrow (1).png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/left-arrow.png"))); // NOI18N
        btnPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/right-arrow.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/right-arrow (1).png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(btnPre, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFirst, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(102, 660, 870, -1));

        txtGhiChu.setColumns(20);
        txtGhiChu.setRows(5);
        txtGhiChu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGhiChuFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGhiChuFocusLost(evt);
            }
        });
        jScrollPane2.setViewportView(txtGhiChu);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 180, 330, 170));

        lblMaKM.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblMaKM.setForeground(new java.awt.Color(14, 65, 91));
        lblMaKM.setText("Mã khuyến mãi:");
        add(lblMaKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 150, 32));

        lblGiamGia.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblGiamGia.setForeground(new java.awt.Color(14, 65, 91));
        lblGiamGia.setText("Giảm giá:");
        add(lblGiamGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 110, 170, 32));

        txtNgayKT.setDateFormatString("dd-MM-yyyy");
        txtNgayKT.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNgayKTFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNgayKTFocusLost(evt);
            }
        });
        add(txtNgayKT, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 310, 335, 40));

        txtNgayBD.setForeground(new java.awt.Color(14, 65, 91));
        txtNgayBD.setDateFormatString("dd-MM-yyyy");
        txtNgayBD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNgayBDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNgayBDFocusLost(evt);
            }
        });
        add(txtNgayBD, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 240, 335, 40));

        pnlMaKM.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout pnlMaKMLayout = new javax.swing.GroupLayout(pnlMaKM);
        pnlMaKM.setLayout(pnlMaKMLayout);
        pnlMaKMLayout.setHorizontalGroup(
            pnlMaKMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 335, Short.MAX_VALUE)
        );
        pnlMaKMLayout.setVerticalGroup(
            pnlMaKMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        add(pnlMaKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, 335, 3));

        pnlTenKM.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout pnlTenKMLayout = new javax.swing.GroupLayout(pnlTenKM);
        pnlTenKM.setLayout(pnlTenKMLayout);
        pnlTenKMLayout.setHorizontalGroup(
            pnlTenKMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 335, Short.MAX_VALUE)
        );
        pnlTenKMLayout.setVerticalGroup(
            pnlTenKMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        add(pnlTenKM, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 210, 335, -1));

        pnlGiamGia.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout pnlGiamGiaLayout = new javax.swing.GroupLayout(pnlGiamGia);
        pnlGiamGia.setLayout(pnlGiamGiaLayout);
        pnlGiamGiaLayout.setHorizontalGroup(
            pnlGiamGiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 335, Short.MAX_VALUE)
        );
        pnlGiamGiaLayout.setVerticalGroup(
            pnlGiamGiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        add(pnlGiamGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 140, 335, -1));

        pnlGhiChu.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout pnlGhiChuLayout = new javax.swing.GroupLayout(pnlGhiChu);
        pnlGhiChu.setLayout(pnlGhiChuLayout);
        pnlGhiChuLayout.setHorizontalGroup(
            pnlGhiChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
        pnlGhiChuLayout.setVerticalGroup(
            pnlGhiChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        add(pnlGhiChu, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 349, 330, 3));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/add2.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setStyle(com.nhom4.ui.ButtonCustom.ButtonStyle.SECONDARY);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 380, 160, 50));

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/editing.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setStyle(com.nhom4.ui.ButtonCustom.ButtonStyle.SECONDARY);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 430, 160, 50));

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/bin-with-lid.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setStyle(com.nhom4.ui.ButtonCustom.ButtonStyle.SECONDARY);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 480, 160, 50));

        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/diskette.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.setStyle(com.nhom4.ui.ButtonCustom.ButtonStyle.SECONDARY);
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        add(btnLuu, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 580, 160, 50));

        btnHuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/delete.png"))); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        add(btnHuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 530, 160, 50));

        tblKhuyenMai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Ma Khuyen Mai", "Ten khuyen mai", "Giam gia", "Ngay bat dau", "Ngay ket thuc", "Ghi chu"
            }
        ));
        tblKhuyenMai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhuyenMaiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblKhuyenMai);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 380, 870, 270));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(190, 190, 190)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1068, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 1070, 280));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/recycle-bin1.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        prev();
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        TimKiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void txtTimKiemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyTyped
        if(txtTimKiem.getText().equals("")){
           lblTimKiem.setVisible(true);
       }
       else
           lblTimKiem.setVisible(false);
    }//GEN-LAST:event_txtTimKiemKeyTyped

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        them = 1;
        btnSua.setEnabled(false);
        btnXoa.setEnabled(false);
        btnLuu.setEnabled(true);
        txtMaKM.setText("");
        txtTenKM.setText("");
        txtGiamGia.setText("");
        txtGhiChu.setText("");
        txtON();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        them = 2;
        btnThem.setEnabled(false);
        btnXoa.setEnabled(false);
        btnLuu.setEnabled(true);
        txtON();
        txtMaKM.setEditable(false);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        if (checkXoa() == true) {
            delete();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        if (them == 1) {
            if (check() == true) {
                insert();
                return;
            }
         }

        if (them == 2) {
            if (checkXoa()) {
                update();
                return;
            }

        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        updateStatus();
        clearForm();
        btnLuu.setEnabled(false);
    }//GEN-LAST:event_btnHuyActionPerformed

    private void tblKhuyenMaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhuyenMaiMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblKhuyenMai.getSelectedRow();
            this.edit();
            tblKhuyenMai.setSelectionBackground(new Color(0, 156, 222));
        }
    }//GEN-LAST:event_tblKhuyenMaiMouseClicked

    private void txtMaKMFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaKMFocusGained
        pnlMaKM.setBackground(new Color(58, 136, 145));
    }//GEN-LAST:event_txtMaKMFocusGained

    private void txtMaKMFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaKMFocusLost
        pnlMaKM.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_txtMaKMFocusLost

    private void txtTenKMFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenKMFocusGained
        pnlTenKM.setBackground(new Color(58, 136, 145));
    }//GEN-LAST:event_txtTenKMFocusGained

    private void txtTenKMFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenKMFocusLost
        pnlTenKM.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_txtTenKMFocusLost

    private void txtNgayBDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNgayBDFocusGained
       
    }//GEN-LAST:event_txtNgayBDFocusGained

    private void txtNgayBDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNgayBDFocusLost
      
    }//GEN-LAST:event_txtNgayBDFocusLost

    private void txtNgayKTFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNgayKTFocusGained
        
    }//GEN-LAST:event_txtNgayKTFocusGained

    private void txtNgayKTFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNgayKTFocusLost
        
    }//GEN-LAST:event_txtNgayKTFocusLost

    private void txtGiamGiaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiamGiaFocusGained
         pnlGiamGia.setBackground(new Color(58, 136, 145));
    }//GEN-LAST:event_txtGiamGiaFocusGained

    private void txtGiamGiaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiamGiaFocusLost
        pnlGiamGia.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_txtGiamGiaFocusLost

    private void txtGhiChuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGhiChuFocusGained
        pnlGhiChu.setBackground(new Color(58, 136, 145));
    }//GEN-LAST:event_txtGhiChuFocusGained

    private void txtGhiChuFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGhiChuFocusLost
        pnlGhiChu.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_txtGhiChuFocusLost

    private void txtTimKiemFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusGained
        pnlSearch.setBackground(new Color(58, 136, 145));
    }//GEN-LAST:event_txtTimKiemFocusGained

    private void txtTimKiemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTimKiemFocusLost
        pnlSearch.setBackground(new Color(153, 153, 153));
    }//GEN-LAST:event_txtTimKiemFocusLost

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        if (Auth.islogin()) {
            LichSuXoa ls = new LichSuXoa();
            ls.changePan(4);
            ls.setVisible(true);
            
        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_jLabel8MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private com.nhom4.ui.ButtonCustom btnHuy;
    private javax.swing.JButton btnLast;
    private com.nhom4.ui.ButtonCustom btnLuu;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPre;
    private com.nhom4.ui.ButtonCustom btnSua;
    private com.nhom4.ui.ButtonCustom btnThem;
    private javax.swing.JButton btnTimKiem;
    private com.nhom4.ui.ButtonCustom btnXoa;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblGhiChu;
    private javax.swing.JLabel lblGiamGia;
    private javax.swing.JLabel lblMaKM;
    private javax.swing.JLabel lblNgayBD;
    private javax.swing.JLabel lblNgayKT;
    private javax.swing.JLabel lblTenKM;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JPanel pnlGhiChu;
    private javax.swing.JPanel pnlGiamGia;
    private javax.swing.JPanel pnlMaKM;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JPanel pnlTenKM;
    private com.nhom4.ui.Table tblKhuyenMai;
    private javax.swing.JTextArea txtGhiChu;
    private javax.swing.JTextField txtGiamGia;
    private javax.swing.JTextField txtMaKM;
    private com.toedter.calendar.JDateChooser txtNgayBD;
    private com.toedter.calendar.JDateChooser txtNgayKT;
    private javax.swing.JTextField txtTenKM;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void init() {
        this.row = -1;
        fillTable();
        btnLuu.setEnabled(false);
        this.updateStatus();
        txtNgayBD.setLocale(Locale.forLanguageTag("vi"));
        txtNgayKT.setLocale(Locale.forLanguageTag("vi"));
        setFont(btnHuy);
        setFont(btnThem);
        setFont(btnSua);
        setFont(btnXoa);
        setFont(btnLuu);
    }
    public void setFont(JButton bt){
            bt.setFont(getFont().deriveFont(Font.BOLD, 18));
        }

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblKhuyenMai.getModel();
        model.setRowCount(0);
        try {
            List<KhuyenMai> list = dao.selectAll(); // Đọc dữ liệu từ CSDL
            for (KhuyenMai nv : list) {
                Object[] data = {
                    nv.getMaKM(),
                    nv.getTenKM(),
                    nv.getGiamGia(),
                    formats.format(nv.getNgayBD()),
                    formats.format(nv.getNgayKT()),
                    nv.getGhiChu()

                };
                listKM.removeAll(listKM);
                listKM.add(nv);
                model.addRow(data);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    public void insert() {
        KhuyenMai ncc = getForm();
        try {
            dao.insert(ncc);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "Thêm mới thành công");
            updateStatus();
            them = 0;
            btnLuu.setEnabled(false);
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại");
            updateStatus();
            them = 0;
            btnLuu.setEnabled(false);
        }

    }

    public void update() {
        KhuyenMai nv = getForm();
        try {
            dao.update(nv);
            this.fillTable();
            MsgBox.alert(this, "Cập nhật thành công");

            updateStatus();
            them = 0;
            btnLuu.setEnabled(false);
        } catch (Exception e) {
            MsgBox.alert(this, e.getMessage());
            System.out.println(e);
            e.getMessage();
            updateStatus();
            them = 0;
            btnLuu.setEnabled(false);
        }
    }

    public void delete() {
        String km = txtMaKM.getText();
        if (MsgBox.confirm(this, "Bạn thực sự muốn xóa chương trình khuyến mãi này")) {
            try {
                dao.hide(km);
                this.fillTable();
                this.clearForm();
                MsgBox.alert(this, "Xóa thành công");
                clearForm();
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa thất bại");
            }
        }
    }

    public void clearForm() {
        KhuyenMai km = new KhuyenMai();
        this.setForm(km);
        this.row = -1;
        this.updateStatus();
    }

    public void TimKiem() {
        DefaultTableModel model = (DefaultTableModel) tblKhuyenMai.getModel();
        model.setRowCount(0);
        try {
            String key = txtTimKiem.getText();
            List<KhuyenMai> list = dao.selectByKeyword(key);

            for (KhuyenMai nh : list) {
                Object[] data = {
                    nh.getMaKM(),
                    nh.getTenKM(),
                    nh.getGiamGia(),
                    formats.format(new java.sql.Date(nh.getNgayBD().getTime())),
                    formats.format(new java.sql.Date(nh.getNgayKT().getTime())),
                    nh.getGhiChu(),};
                model.addRow(data);
            }
        } catch (Exception e) {
            MsgBox.alert(this, e.getMessage());
        }
        this.clearForm();
        this.row = -1;
        updateStatus();
    }

    public void setForm(KhuyenMai km) {
        try {
            txtMaKM.setText(km.getMaKM());
            txtTenKM.setText(km.getTenKM());
            txtGiamGia.setText(String.valueOf(km.getGiamGia()));

            txtNgayBD.setDate(km.getNgayBD());
            txtNgayKT.setDate(km.getNgayKT());
            txtGhiChu.setText(km.getGhiChu());
        } catch (Exception e) {
            MsgBox.alert(this, e.getMessage());
        }
    }

    KhuyenMai getForm() {
        KhuyenMai km = new KhuyenMai();
        km.setMaKM(txtMaKM.getText());
        km.setTenKM(txtTenKM.getText());
        km.setGiamGia(Float.valueOf(txtGiamGia.getText()));
        km.setNgayBD(txtNgayBD.getDate());
        km.setNgayKT(txtNgayKT.getDate());
        km.setGhiChu(txtGhiChu.getText());
        km.setXoa(true);
        return km;
    }

    public void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblKhuyenMai.getRowCount() - 1);
//        Trạng thái form
        btnThem.setEnabled(edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
// Trạng thái điều hướng
        btnFirst.setEnabled(edit && !first);
        btnPre.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
        txtOFF();
    }

    public void edit() {
        String mancc = (String) tblKhuyenMai.getValueAt(this.row, 0);
        KhuyenMai ncc = dao.selectById(mancc);
        this.setForm(ncc);
        this.updateStatus();
    }

    public void Dislay(int i) {

        KhuyenMai v = listKM.get(i);

        txtMaKM.setText(v.getMaKM());
        txtTenKM.setText(v.getTenKM());
        txtGiamGia.setText(String.valueOf(v.getGiamGia()));
        txtNgayBD.setDate(v.getNgayBD());
        txtNgayKT.setDate(v.getNgayKT());
        txtGhiChu.setText(v.getGhiChu());
    }

    public void first() {
        try {
            this.row = 0;
            tblKhuyenMai.setSelectionBackground(new Color(0, 156, 222));
            tblKhuyenMai.setRowSelectionInterval(row, row);
            this.edit();
            Dislay(row);
        } catch (Exception e) {
            return;
        }

    }

    public void prev() {
        try {
            if (this.row > 0) {
                this.row--;
                this.edit();
            }
            tblKhuyenMai.setSelectionBackground(new Color(0, 156, 222));
            tblKhuyenMai.setRowSelectionInterval(row, row);
            Dislay(row);
        } catch (Exception e) {
            if (row < 0) {
                return;
            }
        }
    }

    public void next() {
        try {
            if (this.row < tblKhuyenMai.getRowCount() - 1) {
                this.row++;
                this.edit();
            }
            tblKhuyenMai.setSelectionBackground(new Color(0, 156, 222));
            tblKhuyenMai.setRowSelectionInterval(row, row);
            Dislay(row);
        } catch (Exception e) {
            if (this.row == tblKhuyenMai.getRowCount() - 1) {
                return;
            }
        }
    }

    public void last() {
        try {
            this.row = tblKhuyenMai.getRowCount() - 1;
            this.edit();
            tblKhuyenMai.setSelectionBackground(new Color(0, 156, 222));
            tblKhuyenMai.setRowSelectionInterval(row, row);
            Dislay(row);
        } catch (Exception e) {
            return;
        }

    }

    public void txtOFF() {
        txtMaKM.setEditable(false);
        txtTenKM.setEditable(false);
        txtGiamGia.setEditable(false);
        txtNgayBD.setEnabled(false);
        txtNgayKT.setEnabled(false);
        txtGhiChu.setEditable(false);
        
        txtMaKM.setFocusable(false);
        txtTenKM.setFocusable(false);
        txtGiamGia.setFocusable(false);
        txtGhiChu.setFocusable(false);
    }

    public void txtON() {
        txtMaKM.setEditable(true);
        txtTenKM.setEditable(true);
        txtGiamGia.setEditable(true);
        txtNgayBD.setEnabled(true);
        txtNgayKT.setEnabled(true);
        txtGhiChu.setEditable(true);
        
        txtMaKM.setFocusable(true);
        txtTenKM.setFocusable(true);
        txtGiamGia.setFocusable(true);
        txtGhiChu.setFocusable(true);
    }

    public boolean check() {
        boolean checkGiamGia = true;

        try {
            Float.parseFloat(txtGiamGia.getText());
        } catch (NumberFormatException e1) {
            checkGiamGia = false;
        }

        Date date = null;
        Date now = new Date();
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat dfday = new SimpleDateFormat("dd");
        SimpleDateFormat dfmonth = new SimpleDateFormat("MM");
        SimpleDateFormat dfyear = new SimpleDateFormat("yyyy");

        for (int i = 0; i < listKM.size(); i++) {
            if (listKM.get(i).getMaKM().equalsIgnoreCase(txtMaKM.getText())) {
                checklap = 1;
            }
        }

        if (txtMaKM.getText().equals("")) {
            MsgBox.alert(this, "Không được để trống mã chương trình khuyến mãi");
            txtMaKM.requestFocus();
            return false;
        } else if (txtMaKM.getText().length() > 0 && txtMaKM.getText().length() < 3) {
            MsgBox.alert(this, "Mã chương trình khuyến mãi phải nhập ít nhất 3 ký tự");
            txtMaKM.requestFocus();
            return false;
        } else if (them == 1 && checklap == 1) {
            MsgBox.alert(this, "Mã chương trình khuyến mãi đã tồn tại. Vui lòng nhập mã mới");
            checklap = 0;
            return false;
        } else if (txtTenKM.getText().equals("")) {
            MsgBox.alert(this, "Không được để trống tên chương trình khuyến mãi");
            txtTenKM.requestFocus();
            return false;
        } else if (txtGiamGia.getText().equals("")) {
            MsgBox.alert(this, "Không được để trống giá trị giảm giá (%)");
            txtGiamGia.requestFocus();
            return false;
        } else if (checkGiamGia == false) {
            MsgBox.alert(this, "Vui lòng nhập số");
            txtGiamGia.requestFocus();
        } else if (Float.parseFloat(txtGiamGia.getText()) > 100 || Float.parseFloat(txtGiamGia.getText()) < 0) {
            MsgBox.alert(this, "Điểm phải từ 0 -- 10");
            txtGiamGia.requestFocus();
        } else if (Integer.parseInt(dfyear.format(txtNgayBD.getDate())) < Integer.parseInt(dfyear.format(now))) {
            MsgBox.alert(this, "Thời gian bắt đầu phải lớn hơn thời gian hiện tại!(Năm)");
            return false;
        } else if (Integer.parseInt(dfyear.format(txtNgayBD.getDate())) == Integer.parseInt(dfyear.format(now))) {
            if (Integer.parseInt(dfmonth.format(txtNgayBD.getDate())) < Integer.parseInt(dfmonth.format(now))) {
                MsgBox.alert(this, "Thời gian bắt đầu phải lớn hơn thời gian hiện tại!(Tháng)");
                return false;
            }
            if (Integer.parseInt(dfmonth.format(txtNgayBD.getDate())) == Integer.parseInt(dfmonth.format(now))) {
                if (Integer.parseInt(dfday.format(txtNgayBD.getDate())) < Integer.parseInt(dfday.format(now))) {
                    MsgBox.alert(this, "Thời gian bắt đầu phải lớn hơn thời gian hiện tại!(Ngày)");
                    return false;
                }
            }
        } else if (Integer.parseInt(dfyear.format(txtNgayKT.getDate())) < Integer.parseInt(dfyear.format(txtNgayBD.getDate()))) {
            MsgBox.alert(this, "Thời gian kết thúc phải lớn hơn thời gian bắt đầu!-Năm");
            return false;
        } else if (Integer.parseInt(dfyear.format(txtNgayKT.getDate())) == Integer.parseInt(dfyear.format(txtNgayBD.getDate()))) {
            if (Integer.parseInt(dfmonth.format(txtNgayKT.getDate())) < Integer.parseInt(dfmonth.format(txtNgayBD.getDate()))) {
                MsgBox.alert(this, "Thời gian kết thúc phải lớn hơn thời gian bắt đầu!-Tháng");
                return false;
            }
            if (Integer.parseInt(dfmonth.format(txtNgayKT.getDate())) == Integer.parseInt(dfmonth.format(txtNgayBD.getDate()))) {
                if (Integer.parseInt(dfday.format(txtNgayKT.getDate())) < Integer.parseInt(dfday.format(txtNgayBD.getDate()))) {
                    MsgBox.alert(this, "Thời gian kết thúc phải lớn hơn thời gian bắt đầu!-Ngày");
                    return false;
                }
            }
        }
        return true;
    }

    public boolean checkXoa() {
        Date date = null;
        Date now = new Date();
        SimpleDateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        SimpleDateFormat dfday = new SimpleDateFormat("dd");
        SimpleDateFormat dfmonth = new SimpleDateFormat("MM");
        SimpleDateFormat dfyear = new SimpleDateFormat("yyyy");

        boolean checkGiamGia = true;

        try {
            Float.parseFloat(txtGiamGia.getText());
        } catch (NumberFormatException e1) {
            checkGiamGia = false;
        }

        if (txtTenKM.getText().equals("")) {
            MsgBox.alert(this, "Không được để trống tên chương trình khuyến mãi");
            txtTenKM.requestFocus();
            return false;
        } else if (txtGiamGia.getText().equals("")) {
            MsgBox.alert(this, "Không được để trống giá trị giảm giá (%)");
            txtGiamGia.requestFocus();
            return false;
        } else if (checkGiamGia == false) {
            MsgBox.alert(this, "Vui lòng nhập số");
            txtGiamGia.requestFocus();
            return false;
        } else if (Float.parseFloat(txtGiamGia.getText()) > 100 || Float.parseFloat(txtGiamGia.getText()) < 0) {
            MsgBox.alert(this, "Giảm giá có giá trị từ 0 --> 100 (%)");
            txtGiamGia.requestFocus();
            return false;
        } else if (Integer.parseInt(dfyear.format(txtNgayBD.getDate())) < Integer.parseInt(dfyear.format(now)) && Integer.parseInt(dfyear.format(now)) < Integer.parseInt(dfyear.format(txtNgayKT.getDate()))) {
            MsgBox.alert(this, "Chương trình đang diễn ra không thể sửa hoặc xóa!");
            return false;
        } else if (Integer.parseInt(dfyear.format(txtNgayBD.getDate())) == Integer.parseInt(dfyear.format(now)) && Integer.parseInt(dfyear.format(now)) == Integer.parseInt(dfyear.format(txtNgayKT.getDate()))) {
            if (Integer.parseInt(dfmonth.format(txtNgayBD.getDate())) < Integer.parseInt(dfmonth.format(now)) && Integer.parseInt(dfmonth.format(now)) < Integer.parseInt(dfmonth.format(txtNgayKT.getDate()))) {
                MsgBox.alert(this, "Chương trình đang diễn ra không thể sửa hoặc xóa!");
                return false;
            }
            if (Integer.parseInt(dfmonth.format(txtNgayBD.getDate())) == Integer.parseInt(dfmonth.format(now)) && Integer.parseInt(dfmonth.format(now)) == Integer.parseInt(dfmonth.format(txtNgayKT.getDate()))) {
                if (Integer.parseInt(dfday.format(txtNgayBD.getDate())) < Integer.parseInt(dfday.format(now)) && Integer.parseInt(dfday.format(now)) < Integer.parseInt(dfday.format(txtNgayKT.getDate()))) {
                    MsgBox.alert(this, "Chương trình đang diễn ra không thể sửa hoặc xóa!");
                    return false;
                }
            }
        }

        return true;
    }
}
