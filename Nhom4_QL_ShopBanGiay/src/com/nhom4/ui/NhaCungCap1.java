/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.nhom4.ui;

import com.nhom4.dao.NhaCungCapDAO;
import com.nhom4.entity.NhaCungCap;
import com.nhom4.utils.Auth;
import com.nhom4.utils.MsgBox;
import com.sun.source.tree.BreakTree;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hai
 */
public class NhaCungCap1 extends javax.swing.JPanel {

    /**
     * Creates new form NhaCungCap
     */
    NhaCungCapDAO nccDAO = new NhaCungCapDAO();
    int row = 0;
    int them = 0;
    int checklap = 0;
    ArrayList<NhaCungCap> listNCC = new ArrayList<>();

    public NhaCungCap1() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnFirst = new javax.swing.JButton();
        btnPre = new javax.swing.JButton();
        btnNext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNCC = new com.nhom4.ui.Table();
        jPanel3 = new javax.swing.JPanel();
        lblMaNCC = new javax.swing.JLabel();
        txtMaNCC = new javax.swing.JTextField();
        btnThem = new com.nhom4.ui.ButtonCustom();
        btnSua = new com.nhom4.ui.ButtonCustom();
        btnXoa = new com.nhom4.ui.ButtonCustom();
        btnHuy = new com.nhom4.ui.ButtonCustom();
        btnLuu = new com.nhom4.ui.ButtonCustom();
        lblTenNCC = new javax.swing.JLabel();
        txtTenNCC = new javax.swing.JTextField();
        pnlTen = new javax.swing.JPanel();
        pnlma = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        lblTimKiem = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        btntimKiem = new javax.swing.JButton();
        pnlSearch = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1408, 817));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/left-arrow (1).png"))); // NOI18N
        btnFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstActionPerformed(evt);
            }
        });

        btnPre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/left-arrow.png"))); // NOI18N
        btnPre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreActionPerformed(evt);
            }
        });

        btnNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/right-arrow.png"))); // NOI18N
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/right-arrow (1).png"))); // NOI18N
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPre, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLast, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(127, 127, 127))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(btnPre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFirst, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLast, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 630, 590, -1));

        tblNCC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Ma Nha Cung Cap", "Ten Nha Cung Cap"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNCC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNCCMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblNCC);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 200, 590, 400));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(195, 195, 195)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblMaNCC.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblMaNCC.setForeground(new java.awt.Color(14, 65, 91));
        lblMaNCC.setText("Mã nhà cung cấp:");
        jPanel3.add(lblMaNCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        txtMaNCC.setBackground(new java.awt.Color(245, 245, 245));
        txtMaNCC.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtMaNCC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(245, 245, 245), 2));
        txtMaNCC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaNCCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaNCCFocusLost(evt);
            }
        });
        jPanel3.add(txtMaNCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 430, 39));

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/add2.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setStyle(com.nhom4.ui.ButtonCustom.ButtonStyle.SECONDARY);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel3.add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 260, 60));

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/editing.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setStyle(com.nhom4.ui.ButtonCustom.ButtonStyle.SECONDARY);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel3.add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 270, 260, 60));

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/bin-with-lid.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setStyle(com.nhom4.ui.ButtonCustom.ButtonStyle.SECONDARY);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel3.add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 340, 260, 60));

        btnHuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/delete.png"))); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });
        jPanel3.add(btnHuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, 260, 60));

        btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/diskette.png"))); // NOI18N
        btnLuu.setText("Lưu");
        btnLuu.setStyle(com.nhom4.ui.ButtonCustom.ButtonStyle.SECONDARY);
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });
        jPanel3.add(btnLuu, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, 530, 60));

        lblTenNCC.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTenNCC.setForeground(new java.awt.Color(14, 65, 91));
        lblTenNCC.setText("Tên nhà cung cấp:");
        jPanel3.add(lblTenNCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        txtTenNCC.setBackground(new java.awt.Color(245, 245, 245));
        txtTenNCC.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTenNCC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(245, 245, 245), 2));
        txtTenNCC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenNCCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenNCCFocusLost(evt);
            }
        });
        jPanel3.add(txtTenNCC, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 430, 44));

        javax.swing.GroupLayout pnlTenLayout = new javax.swing.GroupLayout(pnlTen);
        pnlTen.setLayout(pnlTenLayout);
        pnlTenLayout.setHorizontalGroup(
            pnlTenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );
        pnlTenLayout.setVerticalGroup(
            pnlTenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        jPanel3.add(pnlTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 430, 3));

        javax.swing.GroupLayout pnlmaLayout = new javax.swing.GroupLayout(pnlma);
        pnlma.setLayout(pnlmaLayout);
        pnlmaLayout.setHorizontalGroup(
            pnlmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );
        pnlmaLayout.setVerticalGroup(
            pnlmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 3, Short.MAX_VALUE)
        );

        jPanel3.add(pnlma, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 660, 490));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/recycle-bin1.png"))); // NOI18N
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });
        add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        lblTimKiem.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblTimKiem.setForeground(new java.awt.Color(102, 102, 102));
        lblTimKiem.setText("Tìm kiếm theo tên");
        add(lblTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 210, 30));

        txtTimKiem.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        txtTimKiem.setBorder(null);
        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyTyped(evt);
            }
        });
        add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 870, 50));

        btntimKiem.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        btntimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/nhom4/icon/search (4).png"))); // NOI18N
        btntimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntimKiemActionPerformed(evt);
            }
        });
        add(btntimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 40, 60, 50));

        pnlSearch.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout pnlSearchLayout = new javax.swing.GroupLayout(pnlSearch);
        pnlSearch.setLayout(pnlSearchLayout);
        pnlSearchLayout.setHorizontalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        pnlSearchLayout.setVerticalGroup(
            pnlSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        add(pnlSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 850, 3));
    }// </editor-fold>//GEN-END:initComponents

    private void btnFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstActionPerformed
        first();
    }//GEN-LAST:event_btnFirstActionPerformed

    private void btnPreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreActionPerformed
        prev();
    }//GEN-LAST:event_btnPreActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        last();
    }//GEN-LAST:event_btnLastActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        int index = tblNCC.getSelectedRow();
        if (index < 0) {
            MsgBox.alert(this, "Chưa chọn nhà cung cấp");
        } else {
        them = 1;
        btnSua.setEnabled(false);
        btnXoa.setEnabled(false);
        btnLuu.setEnabled(true);
        txtMaNCC.setText("");
        txtTenNCC.setText("");
        txtON();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        them = 2;
        btnThem.setEnabled(false);
        btnXoa.setEnabled(false);
        btnLuu.setEnabled(true);
        txtON();
        txtMaNCC.setEditable(false);
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        Object[] options = {"Ẩn", "Xóa"};
        int n = JOptionPane.showOptionDialog(this, "Bạn muốn ẩn hay xóa?", "Thông báo xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        try {
            if (options[n] == "Ẩn") {
                deleteAn();
            } else {
                delete();
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Bạn chưa chọn");
        }
        
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        updateStatus();
        clearForm();
        btnLuu.setEnabled(false);
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
        if (check() == true) {
            if (them == 1) {
                insert();
                return;
            }
            if (them == 2) {
                update();
                return;
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void tblNCCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNCCMouseClicked
        if (evt.getClickCount() == 1) {
            this.row = tblNCC.getSelectedRow();
            this.edit();
        }
    }//GEN-LAST:event_tblNCCMouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        if (Auth.islogin()) {
            LichSuXoa ls = new LichSuXoa();
            ls.changePan(0);
            ls.setVisible(true);

        } else {
            MsgBox.alert(this, "Vui lòng đăng nhập");
        }
    }//GEN-LAST:event_jLabel22MouseClicked

    private void txtTenNCCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenNCCFocusGained
        txtTenNCC.setBackground(Color.WHITE);
        pnlTen.setBackground(new Color(58, 136, 145));
    }//GEN-LAST:event_txtTenNCCFocusGained

    private void txtTenNCCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenNCCFocusLost
        txtTenNCC.setBackground(new Color(242, 242, 242));
        pnlTen.setBackground(new Color(242, 242, 242));
    }//GEN-LAST:event_txtTenNCCFocusLost

    private void txtMaNCCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaNCCFocusGained
        txtMaNCC.setBackground(Color.WHITE);
        pnlma.setBackground(new Color(58, 136, 145));
    }//GEN-LAST:event_txtMaNCCFocusGained

    private void txtMaNCCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaNCCFocusLost
        txtMaNCC.setBackground(new Color(242, 242, 242));
        pnlma.setBackground(new Color(242, 242, 242));
    }//GEN-LAST:event_txtMaNCCFocusLost

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed

    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void btntimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntimKiemActionPerformed
        this.TimKiem();
    }//GEN-LAST:event_btntimKiemActionPerformed

    private void txtTimKiemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyTyped
        if (txtTimKiem.getText().equals("")) {
            lblTimKiem.setVisible(true);
        } else {
            lblTimKiem.setVisible(false);
        }
    }//GEN-LAST:event_txtTimKiemKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirst;
    private com.nhom4.ui.ButtonCustom btnHuy;
    private javax.swing.JButton btnLast;
    private com.nhom4.ui.ButtonCustom btnLuu;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPre;
    private com.nhom4.ui.ButtonCustom btnSua;
    private com.nhom4.ui.ButtonCustom btnThem;
    private com.nhom4.ui.ButtonCustom btnXoa;
    private javax.swing.JButton btntimKiem;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMaNCC;
    private javax.swing.JLabel lblTenNCC;
    private javax.swing.JLabel lblTimKiem;
    private javax.swing.JPanel pnlSearch;
    private javax.swing.JPanel pnlTen;
    private javax.swing.JPanel pnlma;
    private com.nhom4.ui.Table tblNCC;
    private javax.swing.JTextField txtMaNCC;
    private javax.swing.JTextField txtTenNCC;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void init() {
        
        this.row = -1;
        fillTable();
        this.updateStatus();
        btnLuu.setEnabled(false);
        setFont(btnHuy);
        setFont(btnThem);
        setFont(btnSua);
        setFont(btnXoa);
        setFont(btnLuu);
    }

    public void setFont(JButton bt) {
        bt.setFont(getFont().deriveFont(Font.BOLD, 18));
    }

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblNCC.getModel();
        model.setRowCount(0);
        listNCC.clear();
        try {
            List<NhaCungCap> list = nccDAO.selectAll();
            for (NhaCungCap nv : list) {
                Object[] data = {
                    nv.getMaNCC(),
                    nv.getTenNCC()
                };
                listNCC.add(nv);
                model.addRow(data);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    public void insert() {
        NhaCungCap ncc = getForm();
        try {
            nccDAO.insert(ncc);
            this.fillTable();
            this.clearForm();
            MsgBox.alert(this, "Thêm mới thành công");
            updateStatus();
            them = 0;
            btnLuu.setEnabled(false);
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại");
            updateStatus();
            them = 0;
            btnLuu.setEnabled(false);
        }

    }

    public void update() {
        NhaCungCap nv = getForm();

        try {
            nccDAO.update(nv);
            this.fillTable();
            MsgBox.alert(this, "Cập nhật thành công");
            updateStatus();
            them = 0;
            btnLuu.setEnabled(false);
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại");
            updateStatus();
            them = 0;
            btnLuu.setEnabled(false);
        }

    }

    public void delete() {
        String ncc = txtMaNCC.getText();
        if (MsgBox.confirm(this, "Bạn thực sự muốn xóa nhà cung cấp này")) {
            try {
                nccDAO.delete(ncc);
                this.fillTable();
                this.clearForm();
                MsgBox.alert(this, "Xóa thành công");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa thất bại");
            }
        }
    }
    
    public void deleteAn() {
        String ncc = txtMaNCC.getText();
            try {
                nccDAO.hide(ncc);
                //dao.delete(ncc);
                this.fillTable();
                this.clearForm();
                MsgBox.alert(this, "Ẩn thành công");
            } catch (Exception e) {
                MsgBox.alert(this, "Ẩn thất bại");
            }
        
    }

    public void clearForm() {
        NhaCungCap ncc = new NhaCungCap();
        this.setForm(ncc);
        this.row = -1;
        this.updateStatus();
    }

    public void setForm(NhaCungCap ncc) {
        txtMaNCC.setText(ncc.getMaNCC());
        txtTenNCC.setText(ncc.getTenNCC());
    }

    NhaCungCap getForm() {
        NhaCungCap ncc = new NhaCungCap();
        ncc.setMaNCC(txtMaNCC.getText());
        ncc.setTenNCC(txtTenNCC.getText());
        ncc.setXoa(true);
        return ncc;
    }

    public void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblNCC.getRowCount() - 1);
//        Trạng thái form
        btnThem.setEnabled(edit);
        btnSua.setEnabled(edit);
        btnXoa.setEnabled(edit);
        txtMaNCC.setFocusable(edit);
        txtTenNCC.setFocusable(edit);
// Trạng thái điều hướng
        btnFirst.setEnabled(edit && !first);
        btnPre.setEnabled(edit && !first);
        btnNext.setEnabled(edit && !last);
        btnLast.setEnabled(edit && !last);
        txtOFF();
    }

    public void edit() {
        String mancc = (String) tblNCC.getValueAt(this.row, 0);
        NhaCungCap ncc = nccDAO.selectById(mancc);
        this.setForm(ncc);
        this.updateStatus();
    }

    public void Dislay(int i) {
        NhaCungCap v = listNCC.get(i);
        txtMaNCC.setText(v.getMaNCC());
        txtTenNCC.setText(v.getTenNCC());
    }

    public void first() {
        try {
            this.row = 0;
            tblNCC.setSelectionBackground(new Color(0, 156, 222));
            tblNCC.setRowSelectionInterval(row, row);
            this.edit();
            Dislay(row);
        } catch (Exception e) {
            return;
        }

    }

    public void prev() {
        try {
            if (this.row > 0) {
                this.row--;
                this.edit();
            }
            tblNCC.setSelectionBackground(new Color(0, 156, 222));
            tblNCC.setRowSelectionInterval(row, row);
            Dislay(row);
        } catch (Exception e) {
            if (row < 0) {
                return;
            }
        }
    }

    public void next() {
        try {
            if (this.row < tblNCC.getRowCount() - 1) {
                this.row++;
                this.edit();
            }
            tblNCC.setSelectionBackground(new Color(0, 156, 222));
            tblNCC.setRowSelectionInterval(row, row);
            Dislay(row);
        } catch (Exception e) {
            if (this.row == tblNCC.getRowCount() - 1) {
                return;
            }
        }
    }

    public void last() {
        try {
            this.row = tblNCC.getRowCount() - 1;
            this.edit();
            tblNCC.setSelectionBackground(new Color(0, 156, 222));
            tblNCC.setRowSelectionInterval(row, row);
            Dislay(row);
        } catch (Exception e) {
            return;
        }

    }

    public void txtOFF() {
        txtMaNCC.setEditable(false);
        txtTenNCC.setEditable(false);
    }

    public void txtON() {
        txtMaNCC.setEditable(true);
        txtTenNCC.setEditable(true);
    }

    public boolean check() {
        List<String> listMaNCC = nccDAO.selectMaNCC();
        for (int i = 0; i < listMaNCC.size(); i++) {
            if (listMaNCC.get(i).equalsIgnoreCase(txtMaNCC.getText())) {
                checklap = 1;
            }
        }
        if (txtMaNCC.getText().equals("")) {
            MsgBox.alert(this, "Không được để trống mã nhà cung cấp");
            txtMaNCC.requestFocus();
            return false;
        } else if (txtMaNCC.getText().length() > 7 && txtMaNCC.getText().length() < 5) {
            MsgBox.alert(this, "Mã nhà cung cấp phải nhập ít nhất 3 ký tự");
            txtMaNCC.requestFocus();
            return false;
        } else if (them == 1 && checklap == 1) {
            MsgBox.alert(this, "Mã nhà cung cấp đã tồn tại hoặc đã bị ẩn. Vui lòng nhập mã mới");
            checklap = 0;
            return false;
        } else if (txtTenNCC.getText().equals("")) {
            MsgBox.alert(this, "Không được để trống tên nhà cung cấp");
            txtTenNCC.requestFocus();
            return false;
        }
        return true;
    }

    public void TimKiem() {
        DefaultTableModel model = (DefaultTableModel) tblNCC.getModel();
        model.setRowCount(0);
        try {
            String key = txtTimKiem.getText();
            List<NhaCungCap> list = nccDAO.selectByKeyword(key);

            for (NhaCungCap nh : list) {
                Object[] data = {
                    nh.getMaNCC(),
                    nh.getTenNCC(),};
                model.addRow(data);
            }
        } catch (Exception e) {
            MsgBox.alert(this, e.getMessage());
        }
        this.clearForm();
        this.row = -1;
        updateStatus();
    }
}
